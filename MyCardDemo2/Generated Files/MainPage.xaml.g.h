//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#pragma once


namespace winrt::MyCardDemo2::implementation
{
    using IInspectable = ::winrt::Windows::Foundation::IInspectable;

    template <typename D, typename ... I>
    struct MainPageT : public ::winrt::MyCardDemo2::implementation::MainPage_base<D,
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector,
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector2,
        I...>
    {
        using base_type = typename MainPageT::base_type;
        using base_type::base_type;
        using class_type = typename MainPageT::class_type;

        void InitializeComponent();
        void Connect(int32_t connectionId, IInspectable const& target);
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector GetBindingConnector(int32_t connectionId, IInspectable const& target);
        void UnloadObject(::winrt::Windows::UI::Xaml::DependencyObject const& dependencyObject);
        void DisconnectUnloadedObject(int32_t connectionId);

        ::winrt::Windows::UI::Xaml::Controls::StackPanel CardPanel()
        {
            return _CardPanel;
        }
        void CardPanel(::winrt::Windows::UI::Xaml::Controls::StackPanel value)
        {
            _CardPanel = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::TextBlock showTextBlock()
        {
            return _showTextBlock;
        }
        void showTextBlock(::winrt::Windows::UI::Xaml::Controls::TextBlock value)
        {
            _showTextBlock = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::Button AddListButton()
        {
            return _AddListButton;
        }
        void AddListButton(::winrt::Windows::UI::Xaml::Controls::Button value)
        {
            _AddListButton = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::Flyout addFlyout()
        {
            return _addFlyout;
        }
        void addFlyout(::winrt::Windows::UI::Xaml::Controls::Flyout value)
        {
            _addFlyout = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::TextBox tipTextBox()
        {
            return _tipTextBox;
        }
        void tipTextBox(::winrt::Windows::UI::Xaml::Controls::TextBox value)
        {
            _tipTextBox = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::TextBlock tipTextBlock()
        {
            return _tipTextBlock;
        }
        void tipTextBlock(::winrt::Windows::UI::Xaml::Controls::TextBlock value)
        {
            _tipTextBlock = value;
        }

        ::winrt::Windows::UI::Xaml::Controls::Button sureButton()
        {
            return _sureButton;
        }
        void sureButton(::winrt::Windows::UI::Xaml::Controls::Button value)
        {
            _sureButton = value;
        }
        
    protected:
        bool _contentLoaded{false};

    private:
        struct MainPage_obj1_Bindings;

        ::winrt::Windows::UI::Xaml::Controls::StackPanel _CardPanel{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::TextBlock _showTextBlock{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::Button _AddListButton{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::Flyout _addFlyout{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::TextBox _tipTextBox{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::TextBlock _tipTextBlock{nullptr};
        ::winrt::Windows::UI::Xaml::Controls::Button _sureButton{nullptr};
    };
}

