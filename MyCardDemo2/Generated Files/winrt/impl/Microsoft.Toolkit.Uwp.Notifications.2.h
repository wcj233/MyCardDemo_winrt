// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190506.1

#ifndef WINRT_Microsoft_Toolkit_Uwp_Notifications_2_H
#define WINRT_Microsoft_Toolkit_Uwp_Notifications_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Microsoft.Toolkit.Uwp.Notifications.1.h"
namespace winrt::Microsoft::Toolkit::Uwp::Notifications
{
    struct WINRT_EBO AdaptiveGroup : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveGroupClass,
        impl::require<AdaptiveGroup, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentAdaptiveChild, Microsoft::Toolkit::Uwp::Notifications::IAdaptiveChild, Microsoft::Toolkit::Uwp::Notifications::IToastBindingGenericChild, Windows::Foundation::IStringable>
    {
        AdaptiveGroup(std::nullptr_t) noexcept {}
        AdaptiveGroup(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveGroupClass(ptr, take_ownership_from_abi) {}
        AdaptiveGroup();
    };
    struct WINRT_EBO AdaptiveImage : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveImageClass,
        impl::require<AdaptiveImage, Microsoft::Toolkit::Uwp::Notifications::IBaseImage, Microsoft::Toolkit::Uwp::Notifications::IToastBindingGenericChild, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentAdaptiveChild, Microsoft::Toolkit::Uwp::Notifications::IAdaptiveChild, Microsoft::Toolkit::Uwp::Notifications::IAdaptiveSubgroupChild, Windows::Foundation::IStringable>
    {
        AdaptiveImage(std::nullptr_t) noexcept {}
        AdaptiveImage(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveImageClass(ptr, take_ownership_from_abi) {}
        AdaptiveImage();
        using Microsoft::Toolkit::Uwp::Notifications::IAdaptiveImageClass::ToString;
        using impl::consume_t<AdaptiveImage, Windows::Foundation::IStringable>::ToString;
    };
    struct WINRT_EBO AdaptiveProgressBar : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveProgressBarClass,
        impl::require<AdaptiveProgressBar, Microsoft::Toolkit::Uwp::Notifications::IToastBindingGenericChild, Windows::Foundation::IStringable>
    {
        AdaptiveProgressBar(std::nullptr_t) noexcept {}
        AdaptiveProgressBar(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveProgressBarClass(ptr, take_ownership_from_abi) {}
        AdaptiveProgressBar();
    };
    struct WINRT_EBO AdaptiveProgressBarValue : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveProgressBarValueClass,
        impl::require<AdaptiveProgressBarValue, Windows::Foundation::IStringable>
    {
        AdaptiveProgressBarValue(std::nullptr_t) noexcept {}
        AdaptiveProgressBarValue(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveProgressBarValueClass(ptr, take_ownership_from_abi) {}
        static Microsoft::Toolkit::Uwp::Notifications::AdaptiveProgressBarValue FromValue(double d);
        static Microsoft::Toolkit::Uwp::Notifications::AdaptiveProgressBarValue Indeterminate();
    };
    struct WINRT_EBO AdaptiveSubgroup : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveSubgroupClass,
        impl::require<AdaptiveSubgroup, Windows::Foundation::IStringable>
    {
        AdaptiveSubgroup(std::nullptr_t) noexcept {}
        AdaptiveSubgroup(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveSubgroupClass(ptr, take_ownership_from_abi) {}
        AdaptiveSubgroup();
    };
    struct WINRT_EBO AdaptiveText : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveTextClass,
        impl::require<AdaptiveText, Microsoft::Toolkit::Uwp::Notifications::IAdaptiveChild, Microsoft::Toolkit::Uwp::Notifications::IAdaptiveSubgroupChild, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentAdaptiveChild, Microsoft::Toolkit::Uwp::Notifications::IToastBindingGenericChild, Windows::Foundation::IStringable>
    {
        AdaptiveText(std::nullptr_t) noexcept {}
        AdaptiveText(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IAdaptiveTextClass(ptr, take_ownership_from_abi) {}
        AdaptiveText();
        using Microsoft::Toolkit::Uwp::Notifications::IAdaptiveTextClass::ToString;
        using impl::consume_t<AdaptiveText, Windows::Foundation::IStringable>::ToString;
    };
    struct WINRT_EBO BadgeGlyphContent : Microsoft::Toolkit::Uwp::Notifications::IBadgeGlyphContentClass,
        impl::require<BadgeGlyphContent, Microsoft::Toolkit::Uwp::Notifications::INotificationContent, Windows::Foundation::IStringable>
    {
        BadgeGlyphContent(std::nullptr_t) noexcept {}
        BadgeGlyphContent(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IBadgeGlyphContentClass(ptr, take_ownership_from_abi) {}
        BadgeGlyphContent();
        BadgeGlyphContent(Microsoft::Toolkit::Uwp::Notifications::BadgeGlyphValue const& glyph);
        using Microsoft::Toolkit::Uwp::Notifications::IBadgeGlyphContentClass::ToString;
        using impl::consume_t<BadgeGlyphContent, Windows::Foundation::IStringable>::ToString;
    };
    struct WINRT_EBO BadgeNumericContent : Microsoft::Toolkit::Uwp::Notifications::IBadgeNumericContentClass,
        impl::require<BadgeNumericContent, Microsoft::Toolkit::Uwp::Notifications::INotificationContent, Windows::Foundation::IStringable>
    {
        BadgeNumericContent(std::nullptr_t) noexcept {}
        BadgeNumericContent(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IBadgeNumericContentClass(ptr, take_ownership_from_abi) {}
        BadgeNumericContent();
        BadgeNumericContent(uint32_t number);
        using Microsoft::Toolkit::Uwp::Notifications::IBadgeNumericContentClass::ToString;
        using impl::consume_t<BadgeNumericContent, Windows::Foundation::IStringable>::ToString;
    };
    struct WINRT_EBO TileBackgroundImage : Microsoft::Toolkit::Uwp::Notifications::ITileBackgroundImageClass,
        impl::require<TileBackgroundImage, Microsoft::Toolkit::Uwp::Notifications::IBaseImage, Windows::Foundation::IStringable>
    {
        TileBackgroundImage(std::nullptr_t) noexcept {}
        TileBackgroundImage(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBackgroundImageClass(ptr, take_ownership_from_abi) {}
        TileBackgroundImage();
    };
    struct WINRT_EBO TileBasicImage : Microsoft::Toolkit::Uwp::Notifications::IBaseImage,
        impl::require<TileBasicImage, Windows::Foundation::IStringable>
    {
        TileBasicImage(std::nullptr_t) noexcept {}
        TileBasicImage(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IBaseImage(ptr, take_ownership_from_abi) {}
        TileBasicImage();
    };
    struct WINRT_EBO TileBasicText : Microsoft::Toolkit::Uwp::Notifications::ITileBasicTextClass,
        impl::require<TileBasicText, Windows::Foundation::IStringable>
    {
        TileBasicText(std::nullptr_t) noexcept {}
        TileBasicText(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBasicTextClass(ptr, take_ownership_from_abi) {}
        TileBasicText();
        using Microsoft::Toolkit::Uwp::Notifications::ITileBasicTextClass::ToString;
        using impl::consume_t<TileBasicText, Windows::Foundation::IStringable>::ToString;
    };
    struct WINRT_EBO TileBinding : Microsoft::Toolkit::Uwp::Notifications::ITileBindingClass,
        impl::require<TileBinding, Windows::Foundation::IStringable>
    {
        TileBinding(std::nullptr_t) noexcept {}
        TileBinding(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBindingClass(ptr, take_ownership_from_abi) {}
        TileBinding();
    };
    struct WINRT_EBO TileBindingContentAdaptive : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentAdaptiveClass,
        impl::require<TileBindingContentAdaptive, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContent, Windows::Foundation::IStringable>
    {
        TileBindingContentAdaptive(std::nullptr_t) noexcept {}
        TileBindingContentAdaptive(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentAdaptiveClass(ptr, take_ownership_from_abi) {}
        TileBindingContentAdaptive();
    };
    struct WINRT_EBO TileBindingContentContact : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentContactClass,
        impl::require<TileBindingContentContact, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContent, Windows::Foundation::IStringable>
    {
        TileBindingContentContact(std::nullptr_t) noexcept {}
        TileBindingContentContact(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentContactClass(ptr, take_ownership_from_abi) {}
        TileBindingContentContact();
    };
    struct WINRT_EBO TileBindingContentIconic : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentIconicClass,
        impl::require<TileBindingContentIconic, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContent, Windows::Foundation::IStringable>
    {
        TileBindingContentIconic(std::nullptr_t) noexcept {}
        TileBindingContentIconic(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentIconicClass(ptr, take_ownership_from_abi) {}
        TileBindingContentIconic();
    };
    struct WINRT_EBO TileBindingContentPeople : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentPeopleClass,
        impl::require<TileBindingContentPeople, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContent, Windows::Foundation::IStringable>
    {
        TileBindingContentPeople(std::nullptr_t) noexcept {}
        TileBindingContentPeople(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentPeopleClass(ptr, take_ownership_from_abi) {}
        TileBindingContentPeople();
    };
    struct WINRT_EBO TileBindingContentPhotos : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentPhotosClass,
        impl::require<TileBindingContentPhotos, Microsoft::Toolkit::Uwp::Notifications::ITileBindingContent, Windows::Foundation::IStringable>
    {
        TileBindingContentPhotos(std::nullptr_t) noexcept {}
        TileBindingContentPhotos(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileBindingContentPhotosClass(ptr, take_ownership_from_abi) {}
        TileBindingContentPhotos();
    };
    struct WINRT_EBO TileContent : Microsoft::Toolkit::Uwp::Notifications::ITileContentClass,
        impl::require<TileContent, Windows::Foundation::IStringable>
    {
        TileContent(std::nullptr_t) noexcept {}
        TileContent(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileContentClass(ptr, take_ownership_from_abi) {}
        TileContent();
    };
    struct WINRT_EBO TilePeekImage : Microsoft::Toolkit::Uwp::Notifications::ITilePeekImageClass,
        impl::require<TilePeekImage, Microsoft::Toolkit::Uwp::Notifications::IBaseImage, Windows::Foundation::IStringable>
    {
        TilePeekImage(std::nullptr_t) noexcept {}
        TilePeekImage(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITilePeekImageClass(ptr, take_ownership_from_abi) {}
        TilePeekImage();
    };
    struct WINRT_EBO TileVisual : Microsoft::Toolkit::Uwp::Notifications::ITileVisualClass,
        impl::require<TileVisual, Windows::Foundation::IStringable>
    {
        TileVisual(std::nullptr_t) noexcept {}
        TileVisual(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::ITileVisualClass(ptr, take_ownership_from_abi) {}
        TileVisual();
    };
    struct WINRT_EBO ToastActionsCustom : Microsoft::Toolkit::Uwp::Notifications::IToastActionsCustomClass,
        impl::require<ToastActionsCustom, Microsoft::Toolkit::Uwp::Notifications::IToastActions, Windows::Foundation::IStringable>
    {
        ToastActionsCustom(std::nullptr_t) noexcept {}
        ToastActionsCustom(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastActionsCustomClass(ptr, take_ownership_from_abi) {}
        ToastActionsCustom();
    };
    struct WINRT_EBO ToastActionsSnoozeAndDismiss : Microsoft::Toolkit::Uwp::Notifications::IToastActions,
        impl::require<ToastActionsSnoozeAndDismiss, Windows::Foundation::IStringable>
    {
        ToastActionsSnoozeAndDismiss(std::nullptr_t) noexcept {}
        ToastActionsSnoozeAndDismiss(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastActions(ptr, take_ownership_from_abi) {}
        ToastActionsSnoozeAndDismiss();
    };
    struct WINRT_EBO ToastActivationOptions : Microsoft::Toolkit::Uwp::Notifications::IToastActivationOptionsClass,
        impl::require<ToastActivationOptions, Windows::Foundation::IStringable>
    {
        ToastActivationOptions(std::nullptr_t) noexcept {}
        ToastActivationOptions(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastActivationOptionsClass(ptr, take_ownership_from_abi) {}
        ToastActivationOptions();
    };
    struct WINRT_EBO ToastAudio : Microsoft::Toolkit::Uwp::Notifications::IToastAudioClass,
        impl::require<ToastAudio, Windows::Foundation::IStringable>
    {
        ToastAudio(std::nullptr_t) noexcept {}
        ToastAudio(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastAudioClass(ptr, take_ownership_from_abi) {}
        ToastAudio();
    };
    struct WINRT_EBO ToastBindingGeneric : Microsoft::Toolkit::Uwp::Notifications::IToastBindingGenericClass,
        impl::require<ToastBindingGeneric, Windows::Foundation::IStringable>
    {
        ToastBindingGeneric(std::nullptr_t) noexcept {}
        ToastBindingGeneric(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastBindingGenericClass(ptr, take_ownership_from_abi) {}
        ToastBindingGeneric();
    };
    struct WINRT_EBO ToastBindingShoulderTap : Microsoft::Toolkit::Uwp::Notifications::IToastBindingShoulderTapClass,
        impl::require<ToastBindingShoulderTap, Windows::Foundation::IStringable>
    {
        ToastBindingShoulderTap(std::nullptr_t) noexcept {}
        ToastBindingShoulderTap(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastBindingShoulderTapClass(ptr, take_ownership_from_abi) {}
        ToastBindingShoulderTap();
    };
    struct WINRT_EBO ToastButton : Microsoft::Toolkit::Uwp::Notifications::IToastButtonClass,
        impl::require<ToastButton, Microsoft::Toolkit::Uwp::Notifications::IToastButton, Windows::Foundation::IStringable>
    {
        ToastButton(std::nullptr_t) noexcept {}
        ToastButton(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastButtonClass(ptr, take_ownership_from_abi) {}
        ToastButton(param::hstring const& content, param::hstring const& arguments);
    };
    struct WINRT_EBO ToastButtonDismiss : Microsoft::Toolkit::Uwp::Notifications::IToastButtonDismissClass,
        impl::require<ToastButtonDismiss, Microsoft::Toolkit::Uwp::Notifications::IToastButton, Windows::Foundation::IStringable>
    {
        ToastButtonDismiss(std::nullptr_t) noexcept {}
        ToastButtonDismiss(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastButtonDismissClass(ptr, take_ownership_from_abi) {}
        ToastButtonDismiss();
        ToastButtonDismiss(param::hstring const& customContent);
    };
    struct WINRT_EBO ToastButtonSnooze : Microsoft::Toolkit::Uwp::Notifications::IToastButtonSnoozeClass,
        impl::require<ToastButtonSnooze, Microsoft::Toolkit::Uwp::Notifications::IToastButton, Windows::Foundation::IStringable>
    {
        ToastButtonSnooze(std::nullptr_t) noexcept {}
        ToastButtonSnooze(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastButtonSnoozeClass(ptr, take_ownership_from_abi) {}
        ToastButtonSnooze();
        ToastButtonSnooze(param::hstring const& customContent);
    };
    struct WINRT_EBO ToastContent : Microsoft::Toolkit::Uwp::Notifications::IToastContentClass,
        impl::require<ToastContent, Microsoft::Toolkit::Uwp::Notifications::INotificationContent, Windows::Foundation::IStringable>
    {
        ToastContent(std::nullptr_t) noexcept {}
        ToastContent(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastContentClass(ptr, take_ownership_from_abi) {}
        ToastContent();
    };
    struct WINRT_EBO ToastContextMenuItem : Microsoft::Toolkit::Uwp::Notifications::IToastContextMenuItemClass,
        impl::require<ToastContextMenuItem, Windows::Foundation::IStringable>
    {
        ToastContextMenuItem(std::nullptr_t) noexcept {}
        ToastContextMenuItem(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastContextMenuItemClass(ptr, take_ownership_from_abi) {}
        ToastContextMenuItem(param::hstring const& content, param::hstring const& arguments);
    };
    struct WINRT_EBO ToastGenericAppLogo : Microsoft::Toolkit::Uwp::Notifications::IToastGenericAppLogoClass,
        impl::require<ToastGenericAppLogo, Microsoft::Toolkit::Uwp::Notifications::IBaseImage, Windows::Foundation::IStringable>
    {
        ToastGenericAppLogo(std::nullptr_t) noexcept {}
        ToastGenericAppLogo(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastGenericAppLogoClass(ptr, take_ownership_from_abi) {}
        ToastGenericAppLogo();
    };
    struct WINRT_EBO ToastGenericAttributionText : Microsoft::Toolkit::Uwp::Notifications::IBaseText,
        impl::require<ToastGenericAttributionText, Windows::Foundation::IStringable>
    {
        ToastGenericAttributionText(std::nullptr_t) noexcept {}
        ToastGenericAttributionText(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IBaseText(ptr, take_ownership_from_abi) {}
        ToastGenericAttributionText();
    };
    struct WINRT_EBO ToastGenericHeroImage : Microsoft::Toolkit::Uwp::Notifications::IBaseImage,
        impl::require<ToastGenericHeroImage, Windows::Foundation::IStringable>
    {
        ToastGenericHeroImage(std::nullptr_t) noexcept {}
        ToastGenericHeroImage(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IBaseImage(ptr, take_ownership_from_abi) {}
        ToastGenericHeroImage();
    };
    struct WINRT_EBO ToastHeader : Microsoft::Toolkit::Uwp::Notifications::IToastHeaderClass,
        impl::require<ToastHeader, Windows::Foundation::IStringable>
    {
        ToastHeader(std::nullptr_t) noexcept {}
        ToastHeader(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastHeaderClass(ptr, take_ownership_from_abi) {}
        ToastHeader(param::hstring const& id, param::hstring const& title, param::hstring const& arguments);
    };
    struct WINRT_EBO ToastPeople : Microsoft::Toolkit::Uwp::Notifications::IToastPeopleClass,
        impl::require<ToastPeople, Windows::Foundation::IStringable>
    {
        ToastPeople(std::nullptr_t) noexcept {}
        ToastPeople(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastPeopleClass(ptr, take_ownership_from_abi) {}
        ToastPeople();
    };
    struct WINRT_EBO ToastSelectionBox : Microsoft::Toolkit::Uwp::Notifications::IToastSelectionBoxClass,
        impl::require<ToastSelectionBox, Microsoft::Toolkit::Uwp::Notifications::IToastInput, Windows::Foundation::IStringable>
    {
        ToastSelectionBox(std::nullptr_t) noexcept {}
        ToastSelectionBox(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastSelectionBoxClass(ptr, take_ownership_from_abi) {}
        ToastSelectionBox(param::hstring const& id);
    };
    struct WINRT_EBO ToastSelectionBoxItem : Microsoft::Toolkit::Uwp::Notifications::IToastSelectionBoxItemClass,
        impl::require<ToastSelectionBoxItem, Windows::Foundation::IStringable>
    {
        ToastSelectionBoxItem(std::nullptr_t) noexcept {}
        ToastSelectionBoxItem(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastSelectionBoxItemClass(ptr, take_ownership_from_abi) {}
        ToastSelectionBoxItem(param::hstring const& id, param::hstring const& content);
    };
    struct WINRT_EBO ToastShoulderTapImage : Microsoft::Toolkit::Uwp::Notifications::IToastShoulderTapImageClass,
        impl::require<ToastShoulderTapImage, Microsoft::Toolkit::Uwp::Notifications::IBaseImage, Windows::Foundation::IStringable>
    {
        ToastShoulderTapImage(std::nullptr_t) noexcept {}
        ToastShoulderTapImage(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastShoulderTapImageClass(ptr, take_ownership_from_abi) {}
        ToastShoulderTapImage();
    };
    struct WINRT_EBO ToastSpriteSheet : Microsoft::Toolkit::Uwp::Notifications::IToastSpriteSheetClass,
        impl::require<ToastSpriteSheet, Windows::Foundation::IStringable>
    {
        ToastSpriteSheet(std::nullptr_t) noexcept {}
        ToastSpriteSheet(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastSpriteSheetClass(ptr, take_ownership_from_abi) {}
        ToastSpriteSheet();
    };
    struct WINRT_EBO ToastTextBox : Microsoft::Toolkit::Uwp::Notifications::IToastTextBoxClass,
        impl::require<ToastTextBox, Microsoft::Toolkit::Uwp::Notifications::IToastInput, Windows::Foundation::IStringable>
    {
        ToastTextBox(std::nullptr_t) noexcept {}
        ToastTextBox(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastTextBoxClass(ptr, take_ownership_from_abi) {}
        ToastTextBox(param::hstring const& id);
    };
    struct WINRT_EBO ToastVisual : Microsoft::Toolkit::Uwp::Notifications::IToastVisualClass,
        impl::require<ToastVisual, Windows::Foundation::IStringable>
    {
        ToastVisual(std::nullptr_t) noexcept {}
        ToastVisual(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Toolkit::Uwp::Notifications::IToastVisualClass(ptr, take_ownership_from_abi) {}
        ToastVisual();
    };
}
#endif
