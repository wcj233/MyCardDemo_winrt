// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190506.1

#ifndef WINRT_Windows_Phone_PersonalInformation_2_H
#define WINRT_Windows_Phone_PersonalInformation_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.Storage.Streams.1.h"
#include "winrt/impl/Windows.Phone.PersonalInformation.1.h"
namespace winrt::Windows::Phone::PersonalInformation
{
    struct WINRT_EBO ContactAddress : Windows::Phone::PersonalInformation::IContactAddress
    {
        ContactAddress(std::nullptr_t) noexcept {}
        ContactAddress(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Phone::PersonalInformation::IContactAddress(ptr, take_ownership_from_abi) {}
        ContactAddress();
    };
    struct WINRT_EBO ContactChangeRecord : Windows::Phone::PersonalInformation::IContactChangeRecord
    {
        ContactChangeRecord(std::nullptr_t) noexcept {}
        ContactChangeRecord(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Phone::PersonalInformation::IContactChangeRecord(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_EBO ContactInformation : Windows::Phone::PersonalInformation::IContactInformation
    {
        ContactInformation(std::nullptr_t) noexcept {}
        ContactInformation(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Phone::PersonalInformation::IContactInformation(ptr, take_ownership_from_abi) {}
        ContactInformation();
        static Windows::Foundation::IAsyncOperation<Windows::Phone::PersonalInformation::ContactInformation> ParseVcardAsync(Windows::Storage::Streams::IInputStream const& vcard);
    };
    struct WINRT_EBO ContactQueryOptions : Windows::Phone::PersonalInformation::IContactQueryOptions
    {
        ContactQueryOptions(std::nullptr_t) noexcept {}
        ContactQueryOptions(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Phone::PersonalInformation::IContactQueryOptions(ptr, take_ownership_from_abi) {}
        ContactQueryOptions();
    };
    struct WINRT_EBO ContactQueryResult : Windows::Phone::PersonalInformation::IContactQueryResult
    {
        ContactQueryResult(std::nullptr_t) noexcept {}
        ContactQueryResult(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Phone::PersonalInformation::IContactQueryResult(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_EBO ContactStore : Windows::Phone::PersonalInformation::IContactStore,
        impl::require<ContactStore, Windows::Phone::PersonalInformation::IContactStore2>
    {
        ContactStore(std::nullptr_t) noexcept {}
        ContactStore(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Phone::PersonalInformation::IContactStore(ptr, take_ownership_from_abi) {}
        static Windows::Foundation::IAsyncOperation<Windows::Phone::PersonalInformation::ContactStore> CreateOrOpenAsync();
        static Windows::Foundation::IAsyncOperation<Windows::Phone::PersonalInformation::ContactStore> CreateOrOpenAsync(Windows::Phone::PersonalInformation::ContactStoreSystemAccessMode const& access, Windows::Phone::PersonalInformation::ContactStoreApplicationAccessMode const& sharing);
    };
    struct KnownContactProperties
    {
        KnownContactProperties() = delete;
        static hstring DisplayName();
        static hstring FamilyName();
        static hstring GivenName();
        static hstring HonorificPrefix();
        static hstring HonorificSuffix();
        static hstring AdditionalName();
        static hstring Address();
        static hstring OtherAddress();
        static hstring Email();
        static hstring WorkAddress();
        static hstring WorkTelephone();
        static hstring JobTitle();
        static hstring Birthdate();
        static hstring Anniversary();
        static hstring Telephone();
        static hstring MobileTelephone();
        static hstring Url();
        static hstring Notes();
        static hstring WorkFax();
        static hstring Children();
        static hstring SignificantOther();
        static hstring CompanyName();
        static hstring CompanyTelephone();
        static hstring HomeFax();
        static hstring AlternateTelephone();
        static hstring Manager();
        static hstring Nickname();
        static hstring OfficeLocation();
        static hstring WorkEmail();
        static hstring YomiGivenName();
        static hstring YomiFamilyName();
        static hstring YomiCompanyName();
        static hstring OtherEmail();
        static hstring AlternateMobileTelephone();
        static hstring AlternateWorkTelephone();
    };
    struct WINRT_EBO StoredContact : Windows::Phone::PersonalInformation::IStoredContact,
        impl::require<StoredContact, Windows::Phone::PersonalInformation::IContactInformation2>
    {
        StoredContact(std::nullptr_t) noexcept {}
        StoredContact(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Phone::PersonalInformation::IStoredContact(ptr, take_ownership_from_abi) {}
        StoredContact(Windows::Phone::PersonalInformation::ContactStore const& store);
        StoredContact(Windows::Phone::PersonalInformation::ContactStore const& store, Windows::Phone::PersonalInformation::ContactInformation const& contact);
    };
}
#endif
