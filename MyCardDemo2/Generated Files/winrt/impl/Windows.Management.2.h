// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190506.1

#ifndef WINRT_Windows_Management_2_H
#define WINRT_Windows_Management_2_H
#include "winrt/impl/Windows.Foundation.Collections.1.h"
#include "winrt/impl/Windows.Management.1.h"
namespace winrt::Windows::Management
{
    struct WINRT_EBO MdmAlert : Windows::Management::IMdmAlert
    {
        MdmAlert(std::nullptr_t) noexcept {}
        MdmAlert(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Management::IMdmAlert(ptr, take_ownership_from_abi) {}
        MdmAlert();
    };
    struct WINRT_EBO MdmSession : Windows::Management::IMdmSession
    {
        MdmSession(std::nullptr_t) noexcept {}
        MdmSession(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Management::IMdmSession(ptr, take_ownership_from_abi) {}
    };
    struct MdmSessionManager
    {
        MdmSessionManager() = delete;
        static Windows::Foundation::Collections::IVectorView<hstring> SessionIds();
        static Windows::Management::MdmSession TryCreateSession();
        static void DeleteSessionById(param::hstring const& sessionId);
        static Windows::Management::MdmSession GetSessionById(param::hstring const& sessionId);
    };
}
#endif
