// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190506.1

#ifndef WINRT_Windows_Embedded_DeviceLockdown_2_H
#define WINRT_Windows_Embedded_DeviceLockdown_2_H
#include "winrt/impl/Windows.Foundation.1.h"
#include "winrt/impl/Windows.Foundation.Collections.1.h"
#include "winrt/impl/Windows.Embedded.DeviceLockdown.1.h"
namespace winrt::Windows::Embedded::DeviceLockdown
{
    struct DeviceLockdownProfile
    {
        DeviceLockdownProfile() = delete;
        static Windows::Foundation::Collections::IVectorView<winrt::guid> GetSupportedLockdownProfiles();
        static winrt::guid GetCurrentLockdownProfile();
        static Windows::Foundation::IAsyncAction ApplyLockdownProfileAsync(winrt::guid const& profileID);
        static Windows::Embedded::DeviceLockdown::DeviceLockdownProfileInformation GetLockdownProfileInformation(winrt::guid const& profileID);
    };
    struct WINRT_EBO DeviceLockdownProfileInformation : Windows::Embedded::DeviceLockdown::IDeviceLockdownProfileInformation
    {
        DeviceLockdownProfileInformation(std::nullptr_t) noexcept {}
        DeviceLockdownProfileInformation(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Embedded::DeviceLockdown::IDeviceLockdownProfileInformation(ptr, take_ownership_from_abi) {}
    };
}
#endif
