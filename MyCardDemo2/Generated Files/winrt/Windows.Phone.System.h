// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190506.1

#ifndef WINRT_Windows_Phone_System_H
#define WINRT_Windows_Phone_System_H
#include "winrt/base.h"
static_assert(winrt::check_version(CPPWINRT_VERSION, "2.0.190506.1"), "Mismatched C++/WinRT headers.");
#include "winrt/impl/Windows.Phone.System.2.h"
namespace winrt::impl
{
    template <typename D> bool consume_Windows_Phone_System_ISystemProtectionStatics<D>::ScreenLocked() const
    {
        bool value;
        check_hresult(WINRT_SHIM(Windows::Phone::System::ISystemProtectionStatics)->get_ScreenLocked(&value));
        return value;
    }
    template <typename D> void consume_Windows_Phone_System_ISystemProtectionUnlockStatics<D>::RequestScreenUnlock() const
    {
        check_hresult(WINRT_SHIM(Windows::Phone::System::ISystemProtectionUnlockStatics)->RequestScreenUnlock());
    }
    template <typename D>
    struct produce<D, Windows::Phone::System::ISystemProtectionStatics> : produce_base<D, Windows::Phone::System::ISystemProtectionStatics>
    {
        int32_t WINRT_CALL get_ScreenLocked(bool* value) noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            *value = detach_from<bool>(this->shim().ScreenLocked());
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
    template <typename D>
    struct produce<D, Windows::Phone::System::ISystemProtectionUnlockStatics> : produce_base<D, Windows::Phone::System::ISystemProtectionUnlockStatics>
    {
        int32_t WINRT_CALL RequestScreenUnlock() noexcept final try
        {
            typename D::abi_guard guard(this->shim());
            this->shim().RequestScreenUnlock();
            return 0;
        }
        catch (...) { return to_hresult(); }
    };
}
namespace winrt::Windows::Phone::System
{
    inline bool SystemProtection::ScreenLocked()
    {
        return impl::call_factory<SystemProtection, Windows::Phone::System::ISystemProtectionStatics>([&](auto&& f) { return f.ScreenLocked(); });
    }
    inline void SystemProtection::RequestScreenUnlock()
    {
        impl::call_factory<SystemProtection, Windows::Phone::System::ISystemProtectionUnlockStatics>([&](auto&& f) { return f.RequestScreenUnlock(); });
    }
}
namespace std
{
    template<> struct hash<winrt::Windows::Phone::System::ISystemProtectionStatics> : winrt::impl::hash_base<winrt::Windows::Phone::System::ISystemProtectionStatics> {};
    template<> struct hash<winrt::Windows::Phone::System::ISystemProtectionUnlockStatics> : winrt::impl::hash_base<winrt::Windows::Phone::System::ISystemProtectionUnlockStatics> {};
    template<> struct hash<winrt::Windows::Phone::System::SystemProtection> : winrt::impl::hash_base<winrt::Windows::Phone::System::SystemProtection> {};
}
#endif
